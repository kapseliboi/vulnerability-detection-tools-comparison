import fs from 'fs';
import { CliAnalyzeOptions } from './interfaces/types';
import { runDetectionWithAllTools } from './detectionTools';
import { getManager } from 'typeorm';
import { Project } from './entities/project';
import { downLoadProjectAndInstallDependencies } from './util';


export async function analyze(options: CliAnalyzeOptions) {
    const entityManager = getManager();
    let projects: Project[] = [];
    if (options.inputFile) {
        projects = JSON.parse(fs.readFileSync(options.inputFile, 'utf-8'));
    } else {
        projects = await entityManager.find(Project, { skip: options.skip, take: options.take });
    }

    for (const project of projects) {
        const packageJsonDirs = await downLoadProjectAndInstallDependencies(project);
        if (packageJsonDirs.length === 0) {
            continue;
        }
        console.log('Starting to analyze projects for vulnerabilities');
        await runDetectionWithAllTools(project, packageJsonDirs);
    }
}

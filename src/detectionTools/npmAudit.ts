import { DetectionToolFunction } from "../interfaces/types";
import path from 'path';
import { spawn } from "child_process";
import { handleErrorsAndPromisify } from "./util";

const TOOL_NAME = 'npm audit';

const func: DetectionToolFunction = (project, projectPath, resultsPath, packageJsonDirs) => {
    let cmd = ':';
    for (let i = 0; i < packageJsonDirs.length; ++i) {
        const npmAuditDepsPath = path.join(resultsPath, `npmAuditDeps${i}.json`);
        const npmAuditVulnPath = path.join(resultsPath, `npmAuditVuln${i}.json`);
        const dir = packageJsonDirs[i];
        cmd = `${cmd}; cd ${dir} && ((npm ls -a --json > ${npmAuditDepsPath}) || true) && npm audit --json > ${npmAuditVulnPath}`;
    }
    const child = spawn(cmd, { cwd: projectPath, shell: true });
    return handleErrorsAndPromisify(child, project, TOOL_NAME);
}

export default func;

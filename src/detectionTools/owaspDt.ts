import { spawn } from 'child_process';
import path from 'path';
import { DetectionToolFunction } from '../interfaces/types';
import { handleErrorsAndPromisify } from './util';

const TOOL_NAME = 'OWASP DT';

const func: DetectionToolFunction = (project, projectPath, resultsPath, packageJsonDirs) => {
    let cmd = ':';
    for (let i = 0; i < packageJsonDirs.length; ++i) {
        const dependencyTrackBomsPath = path.join(resultsPath, `dependencyTrackBom${i}.json`);
        const dir = packageJsonDirs[i];
        cmd = `${cmd}; cd ${dir} && cyclonedx-bom --include-dev -o ${dependencyTrackBomsPath}`;
    }
    const child = spawn(cmd, { cwd: projectPath, shell: true });
    return handleErrorsAndPromisify(child, project, TOOL_NAME);
}

export default func;

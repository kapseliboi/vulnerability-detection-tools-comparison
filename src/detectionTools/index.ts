import { SelectedProjectWithHash } from '../interfaces/types';
import owaspDc from './owaspDc';
import { exec } from 'child_process';
import fs from 'fs';
import Path from 'path';

const tools = [
    owaspDc
];

export function runDetectionWithAllTools(project: SelectedProjectWithHash, projectPath: string, resultsPath: string) {
    const projectResultsPath = ensureResultsFolderIsReady(project, resultsPath);
    for (const tool of tools) {
        const cmd = tool(project, projectPath, projectResultsPath);
        const child = exec(cmd, { cwd: projectPath }, (err, stdout, stderr) => {
            console.log(stdout);
            console.log(stderr);
            console.log(err);
        });
        child.on('close', (code) => {
            if (code === 0 ) {
                console.log(`Command "${cmd}" executed successfully`);
            } else {
                console.log(`Command "${cmd}" exited with error code ${code}`);
            }
        });

        child.on('error', (err) => {
            console.log(`Command "${cmd}" exited with error: ${err.message}`);
        });
    }
}

function ensureResultsFolderIsReady(project: SelectedProjectWithHash, resultsPath: string) {
    if (!fs.existsSync(resultsPath)) {
        fs.mkdirSync(resultsPath);
    }

    const projectResultsPath = Path.join(resultsPath, project.name, project.commitHash);
    if (!fs.existsSync(projectResultsPath)) {
        fs.mkdirSync(projectResultsPath, { recursive: true });
    }
    return projectResultsPath;
}

import { execSync, spawn } from 'child_process';
import path from 'path';
import { DetectionToolFunction } from '../interfaces/types';
import { getDetectionToolBase, handleErrorsAndPromisify } from './util';

const TOOL_NAME = 'snyk';

async function getDetectionTool() {
    const version = execSync('snyk -v').toString().trim();
    return getDetectionToolBase(TOOL_NAME, version);
}

const runScan: DetectionToolFunction = (project, projectPath, resultsPath, packageJsonDirs) => {
    const snykDepsReportPath = path.join(resultsPath, 'snykDeps.json');
    const snykVulnReportPath = path.join(resultsPath, 'snykVuln.json');
    const cmd = `snyk test --all-projects --detection-depth=1000 --dev --print-deps --json --json-file-output=${snykVulnReportPath} | sed '/^}$/q' > ${snykDepsReportPath}`;
    const child = spawn(cmd, { cwd: projectPath, shell: true });
    return handleErrorsAndPromisify(child, project, TOOL_NAME);
}

export default {
    runScan,
    getDetectionTool,
};

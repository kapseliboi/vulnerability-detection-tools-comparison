import { getManager } from 'typeorm';
import { Project } from '../entities/project';
import { downloadProject } from '../util';
import { exec } from 'child_process';
import { promisify } from 'util';
import config from '../config';
const execAsync = promisify(exec);

export interface Options {
    skip: number;
    take?: number;
}

export async function randomCommit(options: Options) {
    const entityManager = getManager();
    const projects = await entityManager.find(
        Project,
        { skip: options.skip, take: options.take, order: { createdAt: 'ASC' } });
    for (let i = 0; i < projects.length; ++i) {
        const project = projects[i];
        await downloadProject(project, true, true, true);
        const timestamp = Date.now();
        const filename = `${timestamp}_trigger.js`;
        console.log(`Pushing a file called ${filename} to fork of project ${project.name} (${i + 1}/${projects.length})`);
        await execAsync(
            `echo "console.log('${timestamp}');" > ${filename}; git add ${filename}; git commit -m "Trigger commit"; git push origin HEAD`,
            { cwd: config.TMP_DIR_PATH },
        );
    }
    console.log(`Commit added to all repositories`);
}

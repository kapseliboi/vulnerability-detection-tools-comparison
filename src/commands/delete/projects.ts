import { FindConditions, FindManyOptions, getManager, LessThan, MoreThan } from 'typeorm';
import { Project } from '../../entities/project';
import { deleteForks } from './forks';

export interface Options {
    after?: string;
    before?: string;
    project?: string;
}


export async function deleteProjects(options: Options) {
    const entityManager = getManager();
    const findOptions: FindManyOptions<Project> = {
        order: {
            createdAt: 'ASC',
        },
    };
    if (options.after || options.before || options.project) {
        const whereOpts: FindConditions<Project> = {};
        if (options.after) {
            whereOpts.createdAt = MoreThan(options.after);
        }
        if (options.before) {
            whereOpts.createdAt = LessThan(options.before);
        }
        if (options.project) {
            whereOpts.name = options.project;
        }
        findOptions.where = whereOpts;
    }
    const projects = await entityManager.find(Project, findOptions);
    if (!projects.length) {
        console.log(`Couldn't find any projects with the provided search criteria`);
        return;
    }
    await deleteForks({}, projects);
    await entityManager.remove(Project, projects);
}

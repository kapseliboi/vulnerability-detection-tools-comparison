import { FindConditions, FindManyOptions, getManager, LessThan, MoreThan } from 'typeorm';
import { ToolExecution } from '../entities/toolExecution';

export interface Options {
    after?: string;
    before?: string;
    toolExecutionId?: number;
}


export async function deleteToolExecutions(options: Options) {
    const entityManager = getManager();
    const findOptions: FindManyOptions<ToolExecution> = {
        order: {
            createdAt: 'ASC',
        },
    };
    if (options.after || options.before || options.toolExecutionId !== undefined) {
        const whereOpts: FindConditions<ToolExecution> = {};
        if (options.after) {
            whereOpts.createdAt = MoreThan(options.after);
        }
        if (options.before) {
            whereOpts.createdAt = LessThan(options.before);
        }
        if (options.toolExecutionId !== undefined) {
            whereOpts.id = options.toolExecutionId;
        }
        findOptions.where = whereOpts;
    }
    const toolExecutions = await entityManager.find(ToolExecution, findOptions);
    console.log(`Removing ${toolExecutions.length} tool executions`);
    await entityManager.remove(ToolExecution, toolExecutions);
}

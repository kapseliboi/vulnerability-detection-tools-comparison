import {
    Column,
    CreateDateColumn,
    Entity,
    JoinTable,
    ManyToMany,
    ManyToOne,
    OneToMany,
    PrimaryGeneratedColumn,
    Unique,
    UpdateDateColumn,
} from 'typeorm';
import { DependencyPath } from './dependencyPath';
import { DetectionTool } from './detectionTool';
import { Package } from './package';
import { Project } from './project';
import { Vulnerability } from './vulnerability';

@Entity()
@Unique(['package', 'tool', 'project', 'version', 'purl'])
export class Dependency {
    @PrimaryGeneratedColumn()
    id!: number;

    @ManyToOne(() => Package, { cascade: true })
    package!: Package;

    @ManyToOne(() => DetectionTool, (detectionTool) => detectionTool.dependencies)
    tool!: DetectionTool;

    @ManyToOne(() => Project, (project) => project.dependencies)
    project!: Project

    @Column()
    version!: string;

    @Column()
    purl!: string;

    @OneToMany(() => DependencyPath, (dependencyPath) => dependencyPath.dependency)
    dependencyPaths!: DependencyPath[];

    @ManyToMany(() => Vulnerability, (vulnerability) => vulnerability.dependencies, { cascade: true })
    @JoinTable()
    vulnerabilities!: Vulnerability[];

    // Internal date info, nothing to do with actual dependency
    @CreateDateColumn({ type: 'timestamptz' })
    createdAt!: Date;

    @UpdateDateColumn({ type: 'timestamptz' })
    updatedAt!: Date;
}

import {
    Column,
    CreateDateColumn,
    Entity,
    ManyToOne,
    OneToMany,
    PrimaryGeneratedColumn,
    UpdateDateColumn,
} from 'typeorm';
import { Dependency } from './dependency';
import { DetectionTool } from './detectionTool';
import { ManualReview } from './manualReview';
import { Project } from './project';
import { Vulnerability } from './vulnerability';

@Entity()
export class ToolExecution {
    @PrimaryGeneratedColumn()
    id!: number;

    @Column({ type: 'double precision' })
    durationMs!: number;

    @Column()
    dependencyCount!: number;

    @Column()
    vulnerabilityCount!: number;

    @Column()
    exitCode!: number;

    @OneToMany(() => Dependency, (dependency) => dependency.toolExecution)
    dependencies!: Dependency[];

    @OneToMany(() => Vulnerability, (vulnerability) => vulnerability.toolExecution)
    vulnerabilities!: Vulnerability[];

    @OneToMany(() => ManualReview, (manualReview) => manualReview.toolExecution)
    manualReviews!: ManualReview[];

    @ManyToOne(() => Project, (project) => project.toolExecutions)
    project!: Project;

    @ManyToOne(() => DetectionTool, (tool) => tool.toolExecutions)
    tool!: DetectionTool;

    @Column({ nullable: true })
    errorData?: string;

    @CreateDateColumn({ type: 'timestamptz' })
    createdAt!: Date;

    @UpdateDateColumn({ type: 'timestamptz' })
    updatedAt!: Date;
}

import { Column, CreateDateColumn, Entity, OneToMany, PrimaryColumn, UpdateDateColumn } from "typeorm";
import { Dependency } from "./dependency";
import { ProjectError } from "./projectError";
import { ToolExecution } from "./toolExecution";
import { Vulnerability } from "./vulnerability";

@Entity()
export class Project {
    @PrimaryColumn()
    name!: string;

    @Column()
    forkedName!: string;

    @Column()
    commitHash!: string;

    @OneToMany(() => ProjectError, (projectError) => projectError.project)
    errors!: ProjectError[];

    @Column({ nullable: true, type: 'timestamptz' })
    lastSuccessfulAnalysis!: Date | null;

    @CreateDateColumn({ type: 'timestamptz' })
    createdAt!: Date;

    @UpdateDateColumn({ type: 'timestamptz' })
    updatedAt!: Date;

    @OneToMany(() => Dependency, (dependency) => dependency.project)
    dependencies!: Dependency[];

    @OneToMany(() => Vulnerability, (vulnerability) => vulnerability.project)
    vulnerabilities!: Vulnerability[];

    @OneToMany(() => ToolExecution, (toolExecution) => toolExecution.project)
    toolExecutions!: ToolExecution[];
}

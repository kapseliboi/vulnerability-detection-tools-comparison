import { Column, CreateDateColumn, Entity, OneToMany, PrimaryColumn, UpdateDateColumn } from "typeorm";
import { ProjectError } from "./projectError";
import { ToolExecution } from "./toolExecution";

@Entity()
export class Project {
    @PrimaryColumn()
    name!: string;

    @Column()
    forkedName!: string;

    @Column()
    commitHash!: string;

    @Column({ default: 1 })
    lockfileCount!: number;

    @OneToMany(() => ProjectError, (projectError) => projectError.project)
    errors!: ProjectError[];

    @Column({ nullable: true, type: 'timestamptz' })
    lastSuccessfulAnalysis?: Date;

    @Column({ nullable: true, type: 'timestamptz' })
    lastFailedAnalysis?: Date;

    @CreateDateColumn({ type: 'timestamptz' })
    createdAt!: Date;

    @UpdateDateColumn({ type: 'timestamptz' })
    updatedAt!: Date;

    @OneToMany(() => ToolExecution, (toolExecution) => toolExecution.project)
    toolExecutions!: ToolExecution[];

    // Statistics
    @Column()
    commits!: number;

    @Column()
    stars!: number;

    @Column()
    contributors!: number;

    @Column()
    forks!: number;

    @Column()
    issues!: number;

    @Column()
    pullRequests!: number;

    @Column()
    mainLanguage!: string;

    @Column({ type: 'timestamptz' })
    lastCommitDate!: Date;
}
